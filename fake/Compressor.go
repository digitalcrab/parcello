// This file was generated by counterfeiter
package fake

import (
	"sync"

	"github.com/phogolabs/parcello"
)

type Compressor struct {
	CompressStub        func(ctx *parcello.CompressorContext) (*parcello.Bundle, error)
	compressMutex       sync.RWMutex
	compressArgsForCall []struct {
		ctx *parcello.CompressorContext
	}
	compressReturns struct {
		result1 *parcello.Bundle
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *Compressor) Compress(ctx *parcello.CompressorContext) (*parcello.Bundle, error) {
	fake.compressMutex.Lock()
	fake.compressArgsForCall = append(fake.compressArgsForCall, struct {
		ctx *parcello.CompressorContext
	}{ctx})
	fake.recordInvocation("Compress", []interface{}{ctx})
	fake.compressMutex.Unlock()
	if fake.CompressStub != nil {
		return fake.CompressStub(ctx)
	}
	return fake.compressReturns.result1, fake.compressReturns.result2
}

func (fake *Compressor) CompressCallCount() int {
	fake.compressMutex.RLock()
	defer fake.compressMutex.RUnlock()
	return len(fake.compressArgsForCall)
}

func (fake *Compressor) CompressArgsForCall(i int) *parcello.CompressorContext {
	fake.compressMutex.RLock()
	defer fake.compressMutex.RUnlock()
	return fake.compressArgsForCall[i].ctx
}

func (fake *Compressor) CompressReturns(result1 *parcello.Bundle, result2 error) {
	fake.CompressStub = nil
	fake.compressReturns = struct {
		result1 *parcello.Bundle
		result2 error
	}{result1, result2}
}

func (fake *Compressor) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.compressMutex.RLock()
	defer fake.compressMutex.RUnlock()
	return fake.invocations
}

func (fake *Compressor) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ parcello.Compressor = new(Compressor)
